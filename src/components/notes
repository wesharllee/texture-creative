import { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';


MultiSelect.Inject(CheckBoxSelection);

//define the array of complex data
let sportsData: { [key: string]: Object }[] = [
    { id: 'game1', sports: 'Badminton' },
    { id: 'game2', sports: 'Football' },
    { id: 'game3', sports: 'Tennis' },
    { id: 'game4', sports: 'Golf' },
    { id: 'game5', sports: 'Cricket' },
    { id: 'game6', sports: 'Handball' },
    { id: 'game7', sports: 'Karate' },
    { id: 'game8', sports: 'Fencing' },
    { id: 'game9', sports: 'Boxing' }
];

//initiate the MultiSelect
let msObject: MultiSelect = new MultiSelect({
    // bind the sports Data to datasource property
    dataSource: sportsData,
    // maps the appropriate column to fields property
    fields: { text: 'sports', value: 'id' },
    //set the placeholder to MultiSelect input
    placeholder:"Select games",
    // set the type of mode for checkbox to visualized the checkbox added in li element.
    mode: 'CheckBox',
    //Bind the filter event
    filtering: function (e: FilteringEventArgs) {
        let query = new Query();
        //frame the query based on search string with filter type.
        query = (e.text != "") ? query.where("country", "startswith", e.text, true) : query;
        //pass the filter data source, filter query to updateData method.
        e.updateData(searchData, query);
    }
});
//render the component
msObject.appendTo('#select');

import { MultiSelect, CheckBoxSelection } from '@syncfusion/ej2-dropdowns';
import { useEffect, useState } from 'react';
export const LightsPage = () => {

    const [lights, setLights] = useState([])

    useEffect(
        () => {
            fetch(`http://localhost:8080/lights`)
                .then(response => response.json())
                .then((lightsArray) => {
                    setLights(lightsArray)
                })
        },
        []
    )

    MultiSelect.Inject(CheckBoxSelection);

    let lightData: { [key: string]: Object }[] = [
        {
            id: lights.id,
            name: lights.name,
            image: lights.image,
            lightCost: lights.lightCost
        }
    ]

    let msObject: MultiSelect = new MultiSelect({
        dataSource: lightData,
        fields: { text: 'name', value: 'id' },
        placeHolder: "Select Lights",
        mode: 'CheckBox',
        filtering: function (e: FilteringEventArgs) {
            let query = new Query();
            query = (e.text != "") ? query.where("country", "startswith", e.text, true) : query;
            e.updateData(searchData, query);
        }
    });

    msObject.appendTo('#select');
}

